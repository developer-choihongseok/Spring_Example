<?xml version="1.0" encoding="UTF-8"?>
<beans:beans xmlns="http://www.springframework.org/schema/mvc"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:beans="http://www.springframework.org/schema/beans"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:aop="http://www.springframework.org/schema/aop"
	xmlns:tx="http://www.springframework.org/schema/tx"
	xsi:schemaLocation="http://www.springframework.org/schema/mvc https://www.springframework.org/schema/mvc/spring-mvc.xsd
		http://www.springframework.org/schema/beans https://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/context https://www.springframework.org/schema/context/spring-context.xsd
		http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-3.1.xsd
		http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-3.1.xsd">

	<!-- DispatcherServlet Context: defines this servlet's request-processing infrastructure -->
	
	<!-- Enables the Spring MVC @Controller programming model -->
	<annotation-driven />

	<!-- Handles HTTP GET requests for /resources/** by efficiently serving up static resources in the ${webappRoot}/resources directory -->
	<resources mapping="/resources/**" location="/resources/" />

	<!-- Resolves views selected for rendering by @Controllers to .jsp resources in the /WEB-INF/views directory -->
	<beans:bean class="org.springframework.web.servlet.view.InternalResourceViewResolver">
		<beans:property name="prefix" value="/WEB-INF/views/" />
		<beans:property name="suffix" value=".jsp" />
	</beans:bean>
	
	<context:component-scan base-package="com.myway.tok" />
	
	<beans:bean id="dataSource" class="org.springframework.jdbc.datasource.DriverManagerDataSource">
		<beans:property name="driverClassName" value="com.mysql.cj.jdbc.Driver"/>
		<beans:property name="url" value="jdbc:mysql://localhost:3307/test?serverTimezone=UTC"/>
		<beans:property name="username" value="root"/>
		<beans:property name="password" value="koreait2020"/>
	</beans:bean>
	
	<!-- Transaction 설정 -->
	<!-- 아래 name은 클래스에 있는 변수명이고, ref는 우리가 만들어 놓은 위에 id를 뜻한다. -->
	<beans:bean id="transactionManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
		<beans:property name="dataSource" ref="dataSource"/>
	</beans:bean>
	
	<!-- 트랜잭션을 어노테이션으로 설정 -->
	<!-- proxy-target-class="true" : 클래스 자체에서도 트랜잭션을 이용할 수 있게끔 설정. -->
	<tx:annotation-driven transaction-manager="transactionManager" proxy-target-class="true"/>
	
	<!-- aop target을 인터페이스 말고도, 클래스로도 사용하겠다. 라는 의미! -->
	<aop:config proxy-target-class="true" />
		<beans:bean id="myLoggingAdvice" class="com.myway.tok.aop.MyLoggingAdvice"/>
		<aop:config>
			<aop:aspect ref="myLoggingAdvice">
				<aop:around method="aroundAdvice" pointcut="execution(* com.myway.tok.dao.*DAO.*(..))"/>
			</aop:aspect>
		</aop:config>
</beans:beans>
