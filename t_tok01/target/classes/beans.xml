<?xml version="1.0" encoding="UTF-8"?>
<!-- 아래 <beans> 태그 내용은 다른 프로젝트 생성 시, 복사해서 쓰면 된다! -->
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:aop="http://www.springframework.org/schema/aop"
       xmlns:context="http://www.springframework.org/schema/context"
       xsi:schemaLocation="http://www.springframework.org/schema/beans 
       http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
       http://www.springframework.org/schema/aop
       https://www.springframework.org/schema/aop/spring-aop.xsd
       http://www.springframework.org/schema/context
       https://www.springframework.org/schema/context/spring-context.xsd">
	
	<!-- 2020.12.28 : 외부에서 객체를 만들어서 주입하는 방법 -> DI -->
	<bean id="helloWorld" class="t_tok01.HelloWorld">	<!-- 객체 생성 -->
		<property name="message" value="Korea Hello"/>
	</bean>
	
	<!-- 2020.12.29 : DI -> 세터 주입방법 -->
	<bean id="battery" class="t_tok02.Battery">
		<property name="name" value="스프링으로 산 배터리 - 세터"/>
	</bean>
	
	<!-- 2020.12.29 : '새로 산 배터리 - 세터'를  '새로 산 배터리 - 생성자'로 바꾸는 방법 -->
	<bean id="battery2" class="t_tok02.Battery">
		<constructor-arg name="name" value="스프링으로 산 배터리 - 생성자"/>
	</bean>
	
	<!-- 2020.12.29 : DI -> 생성자 주입방법 -->
	<bean id="blackPhone" class="t_tok02.BlackPhone">
		<constructor-arg ref="battery2"/>
	</bean>
	
	<!-- 2021.01.12 : 핵심 로직인 ItemTarget, GoodsTarget을 bean으로 설정 -->
	<bean id="itemTarget" class="t_tok03.ItemTarget"/>
	<bean id="goodsTarget" class="t_tok03.GoodsTarget"/>
	
	<!-- 2021.01.12 : 관점 로직인 LoggingAdvice를 bean으로 설정 -->
	<bean id="loggingAdvice" class="t_tok03.LoggingAdvice"/>
	
	<!-- 2021.01.12 : 스프링 Life Cycle -->
	<bean id="student" class="t_tok04.Student" init-method="init" destroy-method="cleanUp">
		<property name="name" value="스프링"/>
	</bean>
	
	<!-- 2021.01.12 : AOP : Advice 동작 시점 -->
	<aop:config>
		<aop:aspect ref="loggingAdvice">
			<aop:before method="beforeAdvice"
				pointcut="execution(* t_tok03.ItemTarget.*())"/>
			<aop:before method="beforeBuyConfirm"
				pointcut="execution(* t_tok03.ItemTarget.buyItem())"/>
			<!-- <aop:after method="afterAdvice"
				pointcut="execution(* t_tok03.*Target.buy*(..))"/> -->
			<aop:around method="aroundAdvice"
				pointcut="execution(* t_tok03.*Target.buy*(..))"/>
		</aop:aspect>
	</aop:config>
	
	<!-- 2021.01.12 : "어노테이션을 이용하겠다"는 말 -->
	<context:annotation-config></context:annotation-config>
	
</beans>